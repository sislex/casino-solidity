/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GameLogic, GameLogicInterface } from "../GameLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "wallets",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "percents",
        type: "uint8[]",
      },
      {
        internalType: "uint8",
        name: "ownerFeePercent",
        type: "uint8",
      },
    ],
    name: "calculatePayouts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "getRandom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getRandomNumbers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610f338061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063655b08eb14610046578063a760722814610076578063ceb0baea146100a6575b600080fd5b610060600480360381019061005b919061056b565b6100d6565b60405161006d91906105ba565b60405180910390f35b610090600480360381019061008b9190610888565b6100ec565b60405161009d91906109e5565b60405180910390f35b6100c060048036038101906100bb9190610a07565b610385565b6040516100cd91906109e5565b60405180910390f35b60006100e483836000610471565b905092915050565b60608251845114610132576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012990610ab7565b60405180910390fd5b6000805b845181101561020057600073ffffffffffffffffffffffffffffffffffffffff1686828151811061016a57610169610ad7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf90610b52565b60405180910390fd5b8481815181106101db576101da610ad7565b5b602002602001015160ff16826101f19190610ba1565b91508080600101915050610136565b5060648114610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b90610c21565b60405180910390fd5b60648360ff16111561028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610cb3565b60405180910390fd5b600060648460ff168861029e9190610cd3565b6102a89190610d44565b9050600081886102b89190610d75565b90506000875167ffffffffffffffff8111156102d7576102d66105eb565b5b6040519080825280602002602001820160405280156103055781602001602082028036833780820191505090505b50905060005b885181101561037557606488828151811061032957610328610ad7565b5b602002602001015160ff168461033f9190610cd3565b6103499190610d44565b82828151811061035c5761035b610ad7565b5b602002602001018181525050808060010191505061030b565b5080945050505050949350505050565b60608284106103c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c090610df5565b60405180910390fd5b600082036103d657600191505b60008267ffffffffffffffff8111156103f2576103f16105eb565b5b6040519080825280602002602001820160405280156104205781602001602082028036833780820191505090505b50905060005b8381101561046557610439868683610471565b82828151811061044c5761044b610ad7565b5b6020026020010181815250508080600101915050610426565b50809150509392505050565b60008284106104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90610df5565b60405180910390fd5b6000424433856040516020016104ce9493929190610e7e565b6040516020818303038152906040528051906020012060001c9050600185856104f79190610d75565b6105019190610ba1565b8161050c9190610ecc565b856105179190610ba1565b9150509392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61054881610535565b811461055357600080fd5b50565b6000813590506105658161053f565b92915050565b600080604083850312156105825761058161052b565b5b600061059085828601610556565b92505060206105a185828601610556565b9150509250929050565b6105b481610535565b82525050565b60006020820190506105cf60008301846105ab565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610623826105da565b810181811067ffffffffffffffff82111715610642576106416105eb565b5b80604052505050565b6000610655610521565b9050610661828261061a565b919050565b600067ffffffffffffffff821115610681576106806105eb565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c282610697565b9050919050565b6106d2816106b7565b81146106dd57600080fd5b50565b6000813590506106ef816106c9565b92915050565b600061070861070384610666565b61064b565b9050808382526020820190506020840283018581111561072b5761072a610692565b5b835b81811015610754578061074088826106e0565b84526020840193505060208101905061072d565b5050509392505050565b600082601f830112610773576107726105d5565b5b81356107838482602086016106f5565b91505092915050565b600067ffffffffffffffff8211156107a7576107a66105eb565b5b602082029050602081019050919050565b600060ff82169050919050565b6107ce816107b8565b81146107d957600080fd5b50565b6000813590506107eb816107c5565b92915050565b60006108046107ff8461078c565b61064b565b9050808382526020820190506020840283018581111561082757610826610692565b5b835b81811015610850578061083c88826107dc565b845260208401935050602081019050610829565b5050509392505050565b600082601f83011261086f5761086e6105d5565b5b813561087f8482602086016107f1565b91505092915050565b600080600080608085870312156108a2576108a161052b565b5b60006108b087828801610556565b945050602085013567ffffffffffffffff8111156108d1576108d0610530565b5b6108dd8782880161075e565b935050604085013567ffffffffffffffff8111156108fe576108fd610530565b5b61090a8782880161085a565b925050606061091b878288016107dc565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61095c81610535565b82525050565b600061096e8383610953565b60208301905092915050565b6000602082019050919050565b600061099282610927565b61099c8185610932565b93506109a783610943565b8060005b838110156109d85781516109bf8882610962565b97506109ca8361097a565b9250506001810190506109ab565b5085935050505092915050565b600060208201905081810360008301526109ff8184610987565b905092915050565b600080600060608486031215610a2057610a1f61052b565b5b6000610a2e86828701610556565b9350506020610a3f86828701610556565b9250506040610a5086828701610556565b9150509250925092565b600082825260208201905092915050565b7f4c656e67746873206d69736d6174636800000000000000000000000000000000600082015250565b6000610aa1601083610a5a565b9150610aac82610a6b565b602082019050919050565b60006020820190508181036000830152610ad081610a94565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420706c61796572206164647265737300000000000000000000600082015250565b6000610b3c601683610a5a565b9150610b4782610b06565b602082019050919050565b60006020820190508181036000830152610b6b81610b2f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bac82610535565b9150610bb783610535565b9250828201905080821115610bcf57610bce610b72565b5b92915050565b7f546f74616c2070657263656e74206d7573742062652031303000000000000000600082015250565b6000610c0b601983610a5a565b9150610c1682610bd5565b602082019050919050565b60006020820190508181036000830152610c3a81610bfe565b9050919050565b7f6f776e657246656550657263656e742070657263656e74206d7573742062652060008201527f3c3d203130300000000000000000000000000000000000000000000000000000602082015250565b6000610c9d602683610a5a565b9150610ca882610c41565b604082019050919050565b60006020820190508181036000830152610ccc81610c90565b9050919050565b6000610cde82610535565b9150610ce983610535565b9250828202610cf781610535565b91508282048414831517610d0e57610d0d610b72565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d4f82610535565b9150610d5a83610535565b925082610d6a57610d69610d15565b5b828204905092915050565b6000610d8082610535565b9150610d8b83610535565b9250828203905081811115610da357610da2610b72565b5b92915050565b7f496e76616c69642072616e676500000000000000000000000000000000000000600082015250565b6000610ddf600d83610a5a565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b6000819050919050565b610e30610e2b82610535565b610e15565b82525050565b60008160601b9050919050565b6000610e4e82610e36565b9050919050565b6000610e6082610e43565b9050919050565b610e78610e73826106b7565b610e55565b82525050565b6000610e8a8287610e1f565b602082019150610e9a8286610e1f565b602082019150610eaa8285610e67565b601482019150610eba8284610e1f565b60208201915081905095945050505050565b6000610ed782610535565b9150610ee283610535565b925082610ef257610ef1610d15565b5b82820690509291505056fea26469706673582212203e4f3df67971075b84b76c3044e5cd3ff5e5a1839fab74f3b2d44b45bbb6c7a464736f6c634300081c0033";

type GameLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameLogic__factory extends ContractFactory {
  constructor(...args: GameLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GameLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameLogic__factory {
    return super.connect(runner) as GameLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameLogicInterface {
    return new Interface(_abi) as GameLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameLogic {
    return new Contract(address, _abi, runner) as unknown as GameLogic;
  }
}
